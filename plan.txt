
#-------------------------------------------------- TODO ------------------------------------------------------#

COMPLETE GAME SPIKE
  basic bug check
  consider how to better organise this code - with classes etc
  add constant for spacing woes - otherwise it'll get out of hand - maybe wait for pygame wrapper
  add a pygame wrapper and a window
  add pauses into text and better spacing
  improve the font
  use pyinstaller to make it an actual executable game

GAME +1
  change the story completely, new rooms, better puzzle, prison break sort of thing - i've got the right framework
  sound effects - basic animation?
  New idea - drop item could solve a puzzle. zelda like puzzle, \
       you need to remember the state of a room in order to proceed

#-------------------------------------------------- DONE ------------------------------------------------------#

pop up trapdoor picture
tidy up how you can win and lose
moved trapdoor func to events
game tidyup
write a 'help' function
turn off actions text if not in debug
if count = 1. use knife should swing at beast but not do anything
change meat_cleaver text to knife
win condition implemented - close the trapdoor at the right time
create close function - make subfunctions and test them
new functions for use cleaver and add to use crowbar
win game scenario
open function - it's weird you can't open door and trapdoor
add trapdoor function - you can now lose the game
add parlour items, crowbar, large knife, skull
examine working properly
Add feature to examine room by room name
Bug with key text - now every item has an inventory description instead
Add an examine function ... always available. loop through -> room items, room interactive, inv - (display if available)
What is pycache? Can i hide it from git?
Use key without key doesn't print any text
Setup debug to run by hitting button from anywhere
Add github repo - commit everything so far


#-------------------------------------------------- NOTES FOR NOTION ------------------------------------------------------#

__debug__ attribute - appears to always be set to true. Supposedly running with -O (optimise) will set to False - but didn't work
add args to python launch in launch.json "args": [list],
How to change the indentation (tab size in workspace settings)
    Q then, where are workspace settings stored?
Installed autopep8 - to apply SHIFT ALT F
NOTE - google error codes when you see them - this is part of Python learning
CTRL SHFT H vs CTRL H - how to do this in CLion, looks like it looks from the project base, can you specify a subfolder
bug to fix - picking up items need to change their description
can't debug because of circular import problem - how to fix
circular imports problem - dont import main module into others etc
solved problem of dics containing references to other dicts - has to be set when the item is got
or could be set with an init method - better

why can't i change the room easily? remember i was trying to set a variable to equal a string instead of a dict
  KeyError: means you're trying to access an item that doesn't exist